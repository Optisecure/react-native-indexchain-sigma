/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_zcoin_sigma_Scalar */

#ifndef _Included_com_zcoin_sigma_Scalar
#define _Included_com_zcoin_sigma_Scalar
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jCreateScalar
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jCreateScalar__
  (JNIEnv *, jclass);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jCreateScalar
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jCreateScalar__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jCopyConstructor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jCopyConstructor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jCreateScalar
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jCreateScalar__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jRelease
 * Signature: ()J
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jRelease
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorAssignment
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorAssignment
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorAssignmentInt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorAssignmentInt
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorAssignmentString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorAssignmentString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorMultiply
 * Signature: (J)V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jOperatorMultiply
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorMultiplyAndAssign
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorMultiplyAndAssign
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorPlus
 * Signature: (J)V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jOperatorPlus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorPlusAndAssign
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorPlusAndAssign
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorMinus
 * Signature: (J)V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jOperatorMinus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorMinusAndAssign
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jOperatorMinusAndAssign
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorEqual
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_zcoin_sigma_Scalar_jOperatorEqual
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jOperatorNotEqual
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_zcoin_sigma_Scalar_jOperatorNotEqual
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jInverse
 * Signature: ()V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jInverse
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jNegate
 * Signature: ()V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jNegate
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jSquare
 * Signature: ()V
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jSquare
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jExponent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jExponent
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jExponentInt64
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jExponentInt64
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jRandomize
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jRandomize
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jGenerate
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jGenerate
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jMod_p
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_zcoin_sigma_Scalar_jMod_1p
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jIsMember
 * Signature: ()J
 */
JNIEXPORT jboolean JNICALL Java_com_zcoin_sigma_Scalar_jIsMember
        (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jGetHex
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_zcoin_sigma_Scalar_jGetHex
  (JNIEnv *, jobject);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jSetHex
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_zcoin_sigma_Scalar_jSetHex
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_zcoin_sigma_Scalar
 * Method:    jSerialize
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jbyteArray JNICALL Java_com_zcoin_sigma_Scalar_jSerialize
        (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
